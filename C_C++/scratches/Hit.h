//////////////////////////////////////////////////////////////////////
//HitCylinder class: This class represents the hit generated by 
//                   particles impacting against detectors. 
//                   Hits objects are generally stored in a file, they
//                   are fundamental data for analysis and 
//                   reconstruction.
//Written by Matteo Concas: mett1990@gmail.com 
//Exam: «Tecniche di analisi numerica e simulazione»
//////////////////////////////////////////////////////////////////////
#ifndef Hit_H
#define Hit_H
#include "Punto.h"
#include "Vertice.h"
#include "TString.h"

class Hit : public Punto {
   public:
      Hit();
      Hit(TString fId, const TString fDetShape, Int_t fLayer,
         TString fVtxName, Double_t fX, Double_t fY, Double_t fZ);
      //virtual ~Hit();

      // ____________Inline_Getters_______________
      TString GetVertNameFromHit() const {return vtxname;}
      TString GetDetShape() const {return vtxname;}
      Int_t GetLayerNumber() const {return layernum;}
      //_____________Generators___________________
      static Hit *HitOnCylFromVertex(Vertice fOrigin, Double_t fTheta,
                                    Double_t fPhi, Double_t fRadius, 
                                    Int_t fLayno);
      //Hit* HitOnCylFromHit(Hit &fOrigin, Double_t fTheta,
      //                            Double_t fPhi, Double_t fRadius);

   protected:
      Int_t layernum;       // It keeps track of the layer hit
      TString detectorshape;// It keeps memory of the detector's shape
      TString vtxname;      // Vertex Name 
   ClassDef(Hit,1)
};
#endif